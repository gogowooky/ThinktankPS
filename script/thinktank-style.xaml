<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" >



    <SolidColorBrush x:Key="TTBaseColor"                        Color="#E6E6FA"/>
    <SolidColorBrush x:Key="TTBaseFontColor"                    Color="#483D8B"/>
    <SolidColorBrush x:Key="TTSelectedFontColor"                Color="#000000"/>
    <SolidColorBrush x:Key="TTLabelColor"                       Color="#6A5ACD"/>
    <SolidColorBrush x:Key="TTLabelFontColor"                   Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTTextBackgroundColor"              Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTEditorInactiveCursorLine"         Color="#E6E6FA"/>
    <SolidColorBrush x:Key="TTEditorActiveCursorLine"           Color="#F5E0F0"/>
    <SolidColorBrush x:Key="TTEditorActiveCursorLine2"          Color="#D5E0FF"/>
    <SolidColorBrush x:Key="TTEditorActiveCursorLine3"          Color="#F4F4E0"/>
    <SolidColorBrush x:Key="TTDraggingSplitterColor"            Color="#9932CC"/>
    <SolidColorBrush x:Key="TTColumnHeaderColor"                Color="#7B68EE"/>
    <SolidColorBrush x:Key="TTColumnHeaderOnMouseColor"         Color="#C6C6FA"/>
    <SolidColorBrush x:Key="TTColumnHeaderOnMouseFontColor"     Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTListItemBgColorData"              Color="#EAEAFF"/>
    <SolidColorBrush x:Key="TTListItemFntColorData"             Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTListItemColorSelected"            Color="#C6C6FA"/>
    <SolidColorBrush x:Key="TTListItemFntColorSelected"         Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTListItemColorOnMouse"             Color="#D6D6FA"/>
    <SolidColorBrush x:Key="TTListItemFntColorOnMouse"          Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TTScrollBarThumbColor"              Color="#D6D6FA"/>
    <SolidColorBrush x:Key="TTScrollBarBdColor"                 Color="#E6E6FA"/>
    <SolidColorBrush x:Key="TTGlidSplitterBdColor"              Color="#32CD32"/>


    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource TTScrollBarBdColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="0"
                        Background="{StaticResource TTScrollBarThumbColor}"
                        BorderBrush="{StaticResource TTScrollBarThumbColor}"
                        BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Track x:Name="PART_Track" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Track x:Name="PART_Track" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="12" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
    </Style>

    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
    </Style>

    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="IsTabStop" Value="false" />
        <Style.Triggers>
            <Trigger Property="IsDragging" Value="true" >
                <Setter Property="Background" Value="{StaticResource TTGlidSplitterBdColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" >
                <Setter Property="Background" Value="{StaticResource TTGlidSplitterBdColor}" />
            </Trigger>
        </Style.Triggers>            
    </Style>


    <Style TargetType="Label">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Meiryo" />
        <Setter Property="Background" Value="{StaticResource TTLabelColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTLabelFontColor}" />
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource TTTextBackgroundColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}" />
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource TTColumnHeaderColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTLabelFontColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource TTColumnHeaderOnMouseColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource TTColumnHeaderOnMouseColor}" />
                <Setter Property="Foreground" Value="{StaticResource TTColumnHeaderOnMouseFontColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding flag}" Value="1">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <DataTrigger Binding="{Binding flag}" Value="2">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine2}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <DataTrigger Binding="{Binding flag}" Value="3">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine3}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <DataTrigger Binding="{Binding flag}" Value="I">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <DataTrigger Binding="{Binding flag}" Value="S">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine2}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <DataTrigger Binding="{Binding flag}" Value="C">
                <Setter Property="Background" Value="{StaticResource TTEditorActiveCursorLine3}"/> 
                <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}"/> 
            </DataTrigger>
            <Trigger Property="IsSelected" Value="true" >
                <Setter Property="FontWeight" Value="UltraBold" />
                <Setter Property="Foreground" Value="{StaticResource TTSelectedFontColor}"/> 
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Background" Value="{StaticResource TTBaseColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTBaseFontColor}" />
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true" >
                <Setter Property="FontWeight" Value="UltraBold" />
                <Setter Property="Foreground" Value="{StaticResource TTSelectedFontColor}"/> 
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{StaticResource TTColumnHeaderColor}" />
        <Setter Property="Foreground" Value="{StaticResource TTLabelFontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <TextBlock Text="{TemplateBinding Content}" Padding="1" Width="{TemplateBinding Width}" TextAlignment="Center">
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource TTColumnHeaderOnMouseColor}" />
                <Setter Property="BorderBrush" Value="{StaticResource TTColumnHeaderOnMouseColor}" />
                <Setter Property="Foreground" Value="{StaticResource TTColumnHeaderOnMouseFontColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>